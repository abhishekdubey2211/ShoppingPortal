spring.application.name=JodoShoppingPortal

# Database Connection Settings with SSL enabled
spring.datasource.url=jdbc:mysql://localhost:3306/jodoshop?createDatabaseIfNotExist=true&useSSL=true&requireSSL=true

spring.datasource.username=root
spring.datasource.password=Abhishek@1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
app.secret.key=AbhishekDineshKumarDubey22112000

spring.main.allow-circular-references=true

# Possible values: validate, update, create, create-drop, none
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true 
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=50

# Connection Pooling (HikariCP) Times are in milliseconds
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000 
spring.datasource.hikari.pool-name=SpringBootHikariCP
spring.datasource.hikari.max-lifetime=2000000 
spring.datasource.hikari.connection-timeout=30000  

# Enable detailed logging of SQL and parameter values
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl=DEBUG
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG
logging.level.org.hibernate.internal.SessionImpl=DEBUG



#KAFKA CONFIGURATION 
# Kafka bootstrap servers
#spring.kafka.bootstrap-servers=localhost:9092
#
## Consumer configuration
#spring.kafka.consumer.group-id=jodo-shopping-portal
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.max-poll-records=100  # Tune for optimal performance
#
## Producer configuration
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.acks=all
#spring.kafka.producer.retries=10
#spring.kafka.producer.linger-ms=1
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.compression-type=gzip

# Listener configuration
#spring.kafka.listener.concurrency=3
#spring.kafka.listener.poll-timeout=3000

# Security Configuration (Optional, if using SSL/SASL)
# spring.kafka.security.protocol=SSL
# spring.kafka.ssl.trust-store-location=classpath:ssl/kafka.truststore.jks
# spring.kafka.ssl.trust-store-password=yourpassword
# spring.kafka.ssl.key-store-location=classpath:ssl/kafka.keystore.jks
# spring.kafka.ssl.key-store-password=yourpassword
# spring.kafka.ssl.key-password=yourpassword

#spring.kafka.consumer.max-poll-interval-ms=300000  
#spring.kafka.consumer.max-poll-records=500  